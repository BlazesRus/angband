=== Basic "changes" from Angband 2.6.1 to Angband 2.7.0 ===

Parsing of Item kinds from text files
Reorganization of Item kind file
Rewrite of item allocation code
Rewrite of artifact creation code
Added field "name1" for artifact identities
Used "name2" only for "ego-items" (not artifacts or chests)
Rewrote object description code.
Rewrite of the "known"/"aware" formalism for items/kinds.
Auto-awareness of any item bought from or sold to a store.
Addition of another flag set for items.
Reorganization of the flags for items.
Addition of "IGNORE" flags to allow items to "ignore" damage.
Removal of the "Resist Acid" properties of various items.
Added flags "XTRA_MIGHT" and "XTRA_SHOTS" for bows.
Made an "Ego-Bow" of "Extra Might" (extension of Might)
Made an "Ego-Bow" of "Extra Shots" (extension of Accuracy)
Properly handled "identify" inducing object "awareness" and "combining".
Rewrote the "inventory sorter" and reassigned "subvals" logically.
Genericized the "item value" routines, help sort inventory by "value".
New inventory order uses type, then sub-type, then value.
And, all "unaware" objects are treated as having "maximal" sub-types.
And, all unknown items are treated as having "zero" value.
Made some changes to the "item kind" text file (such as "Restoring").
Reorganized the "item kind" text file in a major way.
Made artifacts MUCH more resistant to "death by throwing" :-)
Added true "object stacking" code, so any items can stack.
Wrote code for "unstacking" objects (ie wands) for use.
Functions combine() and combine_pack() to maintain inventory.
Made rods "EASY_KNOW", and added "(charging)" to rod descriptions.
Made auto-restackers for charged rods.
Added "inventory tagging" (grep for "USE_TAGGER").
Made "store cost" a property of objects
Rewrote "object feeling" code
Moved "object colors" into the parsable text file.
Made all "items" true to their "kinds", except for "INVIS_TRAP".
Combined "POTION*" and "SCROLL*" and used true flags for them.
Used "pval" (not "timeout") for rods, which are NOT activated.
Made rings/amulets of Strength/etc also do "Sustain Strength" etc.
Realized that the preceding change was probably a mistake.

Parsing of monster race info from a text file.
Slight changes to "monster morale" code.
Functions floor_grid(), clean_grid(), and valid_grid().
Function project() and its use by most ball/beam/bolt spells.
Rewrote store "maintainance" code.
Modified store "shuffle" code.
Simplified "feelings" about levels
Major rewrite of the "savefile" code, plus "parser" for old files.
Addition of a generic method for "machine dependant savefile info".
Rewrite of the "pathname constructor" code.
Added floating point (yuck!) to "standard deviation" code.
Added extra "options", for "color", "disturb", and others
Implemented the "new_screen_layout" option (as an option).
Added a "Show depth in feet (vs actual level)" option.
Redid the targetting code, and the direction code.
Made a generic "describe a monster" function.
Fixed more "gender" bugs in the monster recall code.
Wrote a true "output buffer" for I/O, no longer depends on Curses
Made it easy to add a "screen manager" for any "platform".
Added "screen managers" for X11, Curses, and Macintosh
Made it easy to add a "recall window" to any "platform".
Incorporated the "color" code from MacAngband 2.6.1
Cleaned up the "screen layout update" code.
Added "bad gloves"/"heavy armor" warning messages.
Cleaned up the header files (a lot).
Separated out some generic "non-angband" files (like random.c).
Added files to do "memory management" and "string formatting".
Fixed the code to *handle* Rings of Speed of arbitrary plusses.
Made flags DRAIN_EXP, HEAVY_CURSE, PERMA_CURSE to genericize code.
Added flags SUST_STR, SUST_INT, etc, to reduce "silliness".
Made "permanent" and "temporary" resistance equivalent.
Made "permanent" PLUS "temporary" resistance yield "double resist".
Renamed a LOT of variables/fields to more "consistent" forms.
Forced "flag constants" to refer to theie "flag set" explicitly.
Fixed a few old bugs based in misplacement of certain flags.
Rewrote the "monster recall" code some more, genericized it some.
Declined to add the "auto-direction" chooser for open/disarm/etc.
Added option "always repeat" to allow "open/disarm/etc until done".
Rewrote the "something is in your way" (and related) checkers.
Reorganized the source to make the files more "self-contained".

Allowed "refuel" of torches from other torches in the pack.
Made "secret doors" much less of a hack.
Used the "secret door" symbol/color (from the text file) for walls.
Note that now the user can change the "wall symbol" by hand.
Wrote optimized "image dumpers" for the "text file parsers".
Gave Rangers weilding Bows and shooting arrows some extra shots.
Implemented the "XTRA_SHOTS" flag to allow "quick reload launchers".
Rewrote the "ball destruction code" to give interesting messages.
Made "low level" spell books susceptible to "fire damage".
Did other related modifications to the "inventory damage" routines.
Extracted the "disenchantment", "nexus", and other such functions.
Threw out the "Bill Cosby" message.  "Cute" is not "good".
Put many changes in the "store" code to handle "stacks" logically.
Completely rewrote the "wizard" object creation routine.
Realized the need to save "type/subtype" info for artifacts.
Considered writing an "artifact template" file.
Added monster race fields for "current/max" population per level.
Considered using this instead of the old "reproduction limits".
Cleaned up the use of "hack_monptr" in a BIG way.
Separated "update_monsters()" from "process_monsters()".
Put "XXX" and "Hack" in the code to label areas of future work.




