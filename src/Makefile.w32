# File: Makefile.w32
# For Microsoft Visual C++ 4.0 Win32
#
# To compile debug   :   nmake -f makefile.w32
# To compile nodebug :   nmake -f makefile.w32 nodebug=1
#

#define TARGETOS = both
!include <win32.mak>

all: angband.exe

# Define project specific macros
cflags = $(cflags) -DWINDOWS
extralibs = winmm.lib

PROJ_SRCS = \
  z-util.c z-virt.c z-form.c z-rand.c z-term.c \
  variable.c tables.c util.c cave.c \
  object1.c object2.c monster1.c monster2.c \
  xtra1.c xtra2.c spells1.c spells2.c \
  melee1.c melee2.c save.c files.c \
  cmd1.c cmd2.c cmd3.c cmd4.c cmd5.c cmd6.c \
  store.c birth.c load1.c load2.c \
  wizard1.c wizard2.c borg.c borg-map.c \
  borg-obj.c borg-ext.c borg-aux.c borg-ben.c \
  generate.c dungeon.c init1.c init2.c \
  main-win.c readdib.c itsybits.c

PROJ_OBJS = \
  z-util.obj z-virt.obj z-form.obj z-rand.obj z-term.obj \
  variable.obj tables.obj util.obj cave.obj \
  object1.obj object2.obj monster1.obj monster2.obj \
  xtra1.obj xtra2.obj spells1.obj spells2.obj \
  melee1.obj melee2.obj save.obj files.obj \
  cmd1.obj cmd2.obj cmd3.obj cmd4.obj cmd5.obj cmd6.obj \
  store.obj birth.obj load1.obj load2.obj \
  wizard1.obj wizard2.obj borg.obj borg-map.obj \
  borg-obj.obj borg-ext.obj borg-aux.obj borg-ben.obj \
  generate.obj dungeon.obj init1.obj init2.obj \
  main-win.obj readdib.obj itsybits.obj

default: angband.exe

clean:
	del *.obj
	del *.map
	del angband.exe

install:
	copy angband.exe ..

.c.obj:
  $(cc) $(cdebug) $(cflags) $(cvars) $*.c

itsybits.obj: ext-w32\itsybits.c ext-w32\itsybits.h
	$(cc) $(cdebug) $(cflags) $(cvars) ext-w32\itsybits.c

readdib.obj: ext-w32\readdib.c ext-w32\readdib.h
	$(cc) $(cdebug) $(cflags) $(cvars) ext-w32\readdib.c


# Build rule for resource file
angband.res: ext-w32\angband.rc
    $(rc) $(rcflags) $(rcvars) /fo ext-w32\angband.res ext-w32\angband.rc

# Build rule for EXE
angband.exe: $(PROJ_OBJS) ext-w32\angband.res
    $(link) $(linkdebug) $(guilflags) $(extralibs) \
    $(PROJ_OBJS) ext-w32\angband.res $(guilibs) -out:angband.exe $(MAPFILE)
