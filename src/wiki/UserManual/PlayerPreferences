<div id="wikinav"><div class="highlight_box"> Navigation:<br /><a href="http://rephial.org/wiki/Home">Home</a><br /><a href="http://rephial.org/wiki/IndexPage">IndexPage</a><br /></div><div class="highlight_box"> This page:<br /><a href="http://rephial.org/wiki/xref/UserManual/PlayerPreferences">Links to here</a><br />Last modified:<br />2008-12-15 at 06:39<br /></div></div>

<div id="wikihead"><h2><a href="http://rephial.org/wiki/UserManual">UserManual</a> &gt; PlayerPreferences</h2></div>

<div id="wikicontent"><div class="page"><p>Information about options, usage of extra windows, colors and symbols, and macros can all be stored in preference files. In addition, you can customize the game in many other ways and save these preferences to file.<h3 id="s1_1">The priority order of preference files</h3><p>Whenever the game starts up, and whenever it creates or loads a character, it opens various preference files and modifies various things according to instructions in them. The preference files below are listed in descending order of priority: anything in higher files overrides anything in a file below it.<ol type="1"><li><p>lib/user/base name of character.prf<p>May contain options, color definitions, attr/char remappings (what monsters, objects, and features look like), and many other things. Anything in this file is guaranteed to override anything in any other file.<p>What is the &quot;base name&quot; of your character? It is the name of your character, usually with non-alphabetic, non-numeric characters translated to &#39;_&#39;s, and (on IBM/DOS) shortened to eight characters. You may check the base name by trying to save macros or keymaps.<p>XXX javascript here<li><p>lib/user/character race.prf<p>Any preferences that you want to apply to all characters of a given race should go here.<li><p>lib/user/character class.prf<p>Any preferences that you want to apply to all characters of a given class should go here.<li><p>lib/user/user.prf<p>Any preferences that you want to apply to all of your characters should go here.<li><p>lib/pref/user.prf<p>This file is loaded just before the one above it. Links to system-specific user-preference files, which tend to be used by porters to customize the game in ways that they think users of their system will appreciate. For example, &quot;user- mac.prf&quot; includes a bunch of extra macros.<li><p>Your character&#39;s savefile<p>Always contains your current options and window settings. Never contains macros, keymaps, or visual preferences (these all need to be saved in an external file).</ol><p>Many players need no other preference files and can stop reading here.<p>&quot;lib/pref/font.prf&quot;: The basic text-mode preference file.<pre>  Links to font.xxx.prf, which defines the exact colors for all spells and
</pre><p>objects in text mode, and contains the default colors used to display object descriptions in inventory (wizard books are light red, priest books are light green, etc.).<pre>  Also links to system-specific text-mode preference files (font-ibm.prf,
</pre><p>font-win.prf, etc.). Each of these files assigns new text-mode characters and attributes (colors) for objects, monsters, features, etc. For example, &quot;font- ibm.prf&quot; changes dungeon walls from &#39;#&#39;s to solid blocks.<p>&quot;lib/pref/flvr-xxx.prf&quot;: graphics for individual flavors of objects.<pre>  Links to flvr-new.prf, which handles Adam Bolt&#39;s 16x16 graphics, and to
</pre><p>flvr-dvg, which handles David Gervais&#39;s 32x32 graphics.<p>&quot;lib/pref/graf.prf&quot;: The basic graphics-mode preference file.<pre>  Links to font.xxx.prf (but later overrides a lot of the information it
</pre><p>contains).<pre>  Also links to system-specific graphics-mode preference files, all of which
</pre><p>then link to one of two files: graf-xxx.prf: The preference file used for 8x8 graphics.<pre>  Each color of objects and spell effects, and each individual terrain and
</pre><p>monster, are assigned their own graphical representation. graf-new.prf: The preference file used for Adam Bolt&#39;s 16x16 graphics. graf-dvg.prf: The preference file used for David Gervais&#39;s 32x32 graphics.<p>&quot;lib/pref/pref.prf&quot;:<pre>  This is the source of most default settings except for char/attr
</pre><p>remappings. It contains the default values of options and the keymaps for the original and roguelike keysets. Links to the file &quot;message.prf&quot;, which controls the colors of messages. Links to system-specific general preference files (pref-x11.prf, pref-gcu.prf, etc.). These contain system-specific keymappings and allow the game to recognize your keyboard.<p>message.prf: Message colors.<pre>  Each message can be assigned to a type; each type may have one or more
</pre><p>sounds and a color associated with it.<h3 id="s1_2">Writing your own preference files</h3><p>All preference files use a common system to store information. You must be careful of two things:<ol type="1"><li>Make sure that the file will actually be loaded. It needs to be one of the files mentioned above, or be called by one of those files.<li>Watch out for automatic preference dumps. If you try to edit anything between the special markers, your changes will be lost. The solution is to skip past all the automatic stuff, and put your changes at the bottom, below the last marker.</ol><h4 id="s2_1">List of preference file instructions</h4><p>%:human.prf : open up the file &quot;lib/pref/human.prf&quot; or &quot;lib/user/human.prf&quot;<pre>  and read it.  If both files exist, rules in the latter takes priority.
</pre><p>R:0:w/@ : The monster, with index 0 (zero), will be white (&#39;w&#39;),<pre>  and be represented with a &#39;@&#39;.
</pre><p>R:0:0x8C/0x80 : The monster, with index 0 (zero), will get the graphical<pre>  tile at position (0x8C - 0x80), (0x80 - 0x80) = row 12, column 0.  Note
  that values above 0x7F (127) indicate the use of graphics.
</pre><p>K:50:v/~ : The object, with index 50, will be violet (&#39;v&#39;), and be<pre>  represented with a &#39;~&#39;.
</pre><p>K:50:0x83/0x96 : The object, with index 50, will get the graphical<pre>  tile at position (0x83 - 0x80), (0x96 - 0x80) = row 3, column 22.
</pre><p>F:1:1/249 : The feature, with index 1, will be white (color 1), and<pre>  be represented by the character in ASCII position 249 (a centered dot)
</pre><p>S:0xB1:0x01/0x2D : Index B1 (177) of the flavor table will contain the color<pre>  1 (white) and the character in ASCII position 45 (&#39;-&#39;).  A detailed
  look at how the flavor table works is beyond the scope of this document;
  suffice it to say that all characters used to display spell effects, and
  all object kinds with flavors, get 16 entries in the flavor table, one
  for each color.
</pre><p>E:90:0x0C : Tval 90 (magic books) will display in the inventory and<pre>  various listing as color 0x0C (light red).
</pre><p>A:R*\r : The next key listed will be mapped to this set of<pre>  actions (can be either a keymap or a macro).
</pre><p>C:0:x : The previous action listed is a keymap, is active in the<pre>  original keyset (set 0), and will be activated by typing &#39;x&#39;.
</pre><p>P:1:^O : The previous action listed is a macro, is active in the<pre>  roguelike keyset (set 1), and will be activated by typing control-&#39;O&#39;.
</pre><p>V:1:0x00:0xff:0xff:0xff : The color in position 1 (white), will have a<pre>  special value of 0x00 (zero), a red-value of 0xff (255), a green-value
  of 0xff, and a blue-value of 0xff.
</pre><p>X:rogue_like_commands : The &quot;rogue_like_commands&quot; option will be off.<p>Y:rogue_like_commands : The &quot;rogue_like_commands&quot; option will be on.<p>W:2:6:1 : Window 2 (the third one), will display window display #6<pre>  (display messages), and be active (1) as opposed to inactive (0).
</pre><p>M:1:w : Message type 1 (standard hit message) will appear white.<p>D:4 : The delay factor will be 4 (squared).<p>H:3 : The hit point warning will be at 30%.<p>?:&lt;&lt;text&gt;&gt; : A conditional expression. If true, allows another<pre>  line to activate.  The tests include:
  AND     - logical AND
  IOR     - inclusive OR
  EQU     - (string) equals
  NOT     - logical negation
  LEQ     - (string) less than or equal to
  GEQ     - (string) greater than or equal to
  [,]     - group expressions
  $CLASS  - current class
  $GRAF   - 3-letter graphics abbr in &quot;graf-***.prf&quot; (old, new)
  $PLAYER - current player name
  $RACE   - current race
  $CLASS  - current class
  $SYS    - 3-letter system abbr in &quot;pref-***.prf&quot; (ami, mac, win,...)
            See the usage in &quot;lib/pref/pref.prf&quot;, etc.
</pre><h3 id="s1_3">Visuals, colors, and multimedia</h3><h4 id="s2_2">Interact with Visuals: (command: &#39;%&#39;)</h4><p>You may adjust the character and attribute (color) used to display objects, monsters, and terrain features.<pre>  1) Update your preferences with a specific user preference file.
  2) Save your current monster visuals to file.
  3) Save your current object visuals to file.
  4) Save your current terrain visuals to file.
  %) Save your current flavor preferences to file.
  6) Change monster visuals.
  7) Change object visuals.
  8) Change terrain visuals.
  9) Change the symbol and flavor used for many kinds of objects.
  0) Reset visuals to their last saved values (undo all changes).

  When changing visuals, you may type the following keys:
  n: advance one (wrap around if at the end)
  N: go back one (wrap around if at the beginning)
  a: change to the next color (wrap around if at color 15)
  A: change to the previous color (wrap around if at color 0)
  c: change to the next character in the ASCII sequence (wrap around at 255)
  C: change to the previous character (wrap around if at 0)

  A good way to get used to the interface is to choose option 6:  change
</pre><p>monster visuals, note that the first &quot;monster&quot; is your character, and change it from a white &#39;@&#39; to something silly. Leave, see how weird you look, come back, and (if you like) press &#39;0&#39; to reset the visuals.<pre>  Remember to type Control-R after making any changes.
</pre><p>Interact with colors: (command &#39;&amp;&#39;) :<pre>  In the interact with colors display, you have three options available:
  1) Update your preferences with a specific user preference file.
  2) Save your colors to file.
  3) Modify colors.

  When changing colors, you may issue the following commands:
  n: go to the next color (wraps around at 255)
  N: go back one (wrap around if at 0)
  k: change a value (possibly the gamma correction?)
  K: change a value (possibly the gamma correction?)
  r: increase the red in this color (wraps around at hex value 0xff)
  R: decrease the red in this color (wraps around at hex value 0x00)
  g: increase the green in this color (wraps around at hex value 0xff)
  G: decrease the green in this color (wraps around at hex value 0x00)
  b: increase the blue in this color (wraps around at hex value 0xff)
  B: decrease the blue in this color (wraps around at hex value 0x00)

  Note that, while the game is theoretically capable of using more than 16
</pre><p>colors, it is not currently set up to do so. Also, color 0 should not be changed.<pre>  Remember to type Control-R after making any changes.
</pre><p>Interact with multimedia: (command &#39;!&#39;) :<pre>  Some ports of this game (but not all) will play sounds and music.  If your
</pre><p>port is one of them, you can adjust volumes, turn sounds off and on entirely, and tweak various other things.</div></div>

