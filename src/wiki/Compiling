<div id="wikinav"><div class="highlight_box"> Navigation:<br /><a href="http://rephial.org/wiki/Home">Home</a><br /><a href="http://rephial.org/wiki/IndexPage">IndexPage</a><br /></div><div class="highlight_box"> This page:<br /><a href="http://rephial.org/wiki/xref/Compiling">Links to here</a><br />Last modified:<br />2011-04-27 at 22:15<br /></div></div>

<div id="wikihead"><h2>Compiling</h2></div>

<div id="wikicontent"><div class="page"><h3 id="s1_1">Compiling Angband</h3><p>You only want to read this file if you want to compile the game. It is probably unnecessary to do so, since most platforms have pre-compiled versions available.<p>If can construct &quot;main-xxx.c&quot; and/or &quot;Makefile.xxx&quot; files for a currently unsupported system, please write to the Angband development list with details, and it will probably be included in a future version.<ul><li><a href="#s1_1">Compiling Angband</a><ul><li><a href="#s2_1">Getting the development version</a><li><a href="#s2_2">Linux/Unix</a><li><a href="#s2_3">Windows + Cygwin/MinGW</a><li><a href="#s2_4">Windows + Dev-C++</a><li><a href="#s2_5">Windows + Visual C++</a><li><a href="#s2_6">Mac OS X + GCC</a><li><a href="#s2_7">Summary of Developer Resources</a></ul></ul><h4 id="s2_1">Getting the development version</h4><p>If you want to compile the current development verion of the game, then you will first need a <a class="extlink" href="http://subversion.tigris.org/">Subversion</a> client to get a copy of the code. On Windows, try using <a class="extlink" href="http://tortoisesvn.net/downloads">TortoiseSVN</a>.<p>When you have it, try<pre> $ svn co svn://rephial.org/angband/trunk
</pre><p>Or, in the case of TortoiseSVN, make a new folder where you want to check out, right-click, and select &quot;SVN checkout&quot;. Use the above URL and click &quot;OK&quot;.<p>Then follow the instructions below as usual. On Unix, if you want to use the <code>./configure</code> script, then you will first have to generate one:<pre> $ sh autogen.sh
</pre><p>If you&#39;re using OpenBSD, you may have to specify which version of automake and autoconf you wish to use, like:<pre> $ AUTOCONF_VERSION=2.59 AUTOMAKE_VERSION=1.9 ./autogen.sh
</pre></div><hr /><div class="page"><h4 id="s2_2">Linux/Unix</h4><p>If you use Unix, then the best option is to use the <code>./configure</code> script. This requires a recent version of <a class="extlink" href="http://ftp.gnu.org/gnu/autoconf/">autoconf (v2.60 or later)</a>.<p>If you are using a Debian-based distribution, the following should get you all the packages you need for X11, SDL, and GTK ports:<pre> $ sudo apt-get install autoconf gcc libc6-dev libncurses5-dev libx11-dev \
             libsdl1.2-dev libsdl-ttf2.0-dev libsdl-mixer1.2-dev libsdl-image1.2-dev \
             libgtk2.0-dev libglade2-dev
</pre><p>If you are using a RedHat/Fedora based distribution (such as Linpus on an Acer Aspire One) and only want the text based interface you can use:<pre> $ sudo yum install make gcc ncurses-devel
</pre><p>To get a basic build (X11 + curses), with your home directory as the install target, try:<pre> $ ./configure --prefix=$HOME
 $ make
 $ make install
</pre><p>If you don&#39;t want to install locally, but would rather play from the same directory you compiled the game in, try:<pre> $ ./configure --with-no-install
 $ make
</pre><p>For help with configure:<pre> $ ./configure --help
</pre><p>Other settings can be tuned. You can set CC (compiler), CPPFLAGS (preprocessor flags), CFLAGS (compiler flags), LDFLAGS (linker flags), and LIBS (libraries). Configure may modify all but CC. For example:<pre> $ env CC=&#39;cc&#39; CPPFLAGS=&#39;-DUSE_HARDCODE&#39; ./configure
</pre><p>For a system wide installation you might want to try something more like:<pre> $ ./configure --with-setgid=games --with-libpath=/usr/local/games/lib/angband
               --bindir=/usr/local/games
 $ make
 $ su -c &quot;make install&quot;
</pre><p>The autotools build uses &quot;Objective Make&quot; (OMK) from [<a href="http://www.atheme.org/">http://www.atheme.org/</a>].<p>If you don&#39;t have/want autotools, or want to use a frontend not supported by automake, then Makefile.std should work for you,<p>Notes for Solaris users:<ul><li>Package SUNWgmake may have been installed by default, if so, you can use gnu make (/usr/sfw/bin/gmake). The default Solaris make utilities will give an error.<li>If &quot;gmake install&quot; gives an error, change the &quot;INSTALL =&quot; line of mk/rules.mk to an absolute path.</ul></div><hr /><div class="page"><h4 id="s2_3">Windows + Cygwin/MinGW</h4><ol type="1"><li><p>Get <a class="extlink" href="http://www.mingw.org/">MinGW and MSYS</a>. (Or get <a class="extlink" href="http://cygwin.com/">Cygwin</a>, though it&#39;s not recommended.)<ol type="1"><li>Try using the <a class="extlink" href="http://sourceforge.net/project/showfiles.php?group_id=2435#pkg0_0">automated installer</a>.<li>Click through the installer, accepting the defaults until you get to &quot;Choose components&quot;.<li>Tick the &quot;MingGW Make&quot; entry.</ol><li><p>Enter the shell for your environment (in the case of MinGW, this is the Windows command prompt) and get into the src/ directory of the game.<li><p>Run <code>make -f makefile.win</code>. Add &quot; MINGW=yes&quot; to the end of that iff you&#39;re using MinGW.</ol></div><hr /><div class="page"><h4 id="s2_4">Windows + Dev-C++</h4><ol type="1"><li><p>Get and install <a class="extlink" href="http://www.bloodshed.net/devcpp.html">DevC++</a>.<li><p>Create an empty C project, located in the source directory (you can place it elsewhere but you may need to fiddle about a bit more if you do).<li><p>Add every C file in src/, and also everything from the src/win, src/monster, src/object and src/player directories.<li><p>Go to Project -&gt; Project Options, and:<ol type="1"><li>In the &quot;General&quot; tab, ensure &quot;Win32 console application&quot; is selected.<li>On Dev-C++ 4, click on &quot;Browse&quot; under &quot;Icon&quot; and select <code>angband.ico</code>.<li>In the &quot;Build Options&quot; tab, change the executable output directory to &quot;..\&quot;.</ol><li><p>For SDL, in the &quot;parameters&quot; tab, add:<ol type="1"><li><code>-lmingw32 -mwindows -DWINDOWS -DUSE_SDL</code> to the compiler options.<li><code>-lwinmm -lmingw32 -mwindows -lSDL -lSDLmain -lSDL_ttf</code> to the linker options.</ol><li><p><b>For the Windows port</b>, in the &quot;parameters&quot; tab, add:<ol type="1"><li><code>-mwindows -DWINDOWS -I.</code> to the compiler options.<li><code>-lmingw32 -lwinmm -mwindows</code> to the linker options.</ol><li><p>Compile.</ol></div><hr /><div class="page"><h4 id="s2_5">Windows + Visual C++</h4><ol type="1"><li>Get and install <a class="extlink" href="http://www.microsoft.com/express/vc/">Microsoft Visual C++ 2008 Express edition</a>.<li>Start the Visual Studio 2008 command prompt and change to the source directory of angband (e.g. C:\angband-3.1.0beta\src\)<li>Compile with <code>nmake /fMakefile.nmake</code>.</ol></div><hr /><div class="page"><h4 id="s2_6">Mac OS X + GCC</h4><ol type="1"><li>Install the <a class="extlink" href="http://developer.apple.com/tools/">Apple Developer CD</a> if you haven&#39;t already done so.<li><b>Compile Angband:</b> In Terminal.app type <code>cd angband/src</code> to get to the Angband source directory. Then type <code>make -f Makefile.osx</code>.</ol><p>If everything compiled, then you should have an &#39;Angband&#39; application bundle in your &#39;angband&#39; directory. If you want to distribute a modified version to other players then you can use the &#39;dist&#39; Makefile target to repackage the game. In Terminal.app type <code>make -f Makefile.osx dist</code> to create a *.dmg disk-image.<p>If you are trying to compile a variant that doesn&#39;t have OS X support, install <a class="extlink" href="http://metissian.com/projects/macosx/subversion/">subversion/svn</a> and recent versions of autoconf &amp; automake, and follow the UNIX instructions above. The curses version probably won&#39;t work properly (&quot;LIGHT_DARK&quot; renders as black on black in Terminal.app), but the X11 version should be adequate.</div><hr /><div class="page"><h4 id="s2_7">Summary of Developer Resources</h4><ul><li><a class="extlink" href="http://subversion.tigris.org/project_packages.html">Subversion/svn</a> source control system<li>Build tools: <a class="extlink" href="http://ftp.gnu.org/gnu/make">gnumake</a>, <a class="extlink" href="http://ftp.gnu.org/gnu/autoconf/">autoconf</a>, <a class="extlink" href="http://ftp.gnu.org/gnu/automake/">automake</a><li>SDL graphics/text rendering <a class="extlink" href="http://trac.macosforge.org/projects/macports/wiki">for OS X</a><li><a class="extlink" href="http://www.cygwin.com/">Cygwin</a> build tools for windows</ul></div></div>

